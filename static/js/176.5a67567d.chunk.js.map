{"version":3,"file":"static/js/176.5a67567d.chunk.js","mappings":"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","sources":["components/movies/movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MoviesWrapper = styled.div`\n  padding: 20px;\n`;\n\nconst CenteredWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n\n  h1 {\n    font-size: 44px;\n    margin-bottom: 20px;\n    text-align: center;\n    color: #5154e7;\n  }\n`;\n\nconst SearchWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n\n  input {\n    padding: 10px;\n    font-size: 16px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-right: 10px;\n  }\n\n  button {\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #5154e7;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n\n    &:hover {\n      background-color: #5292CE;\n    }\n  }\n`;\n\nconst MoviesList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nconst MovieItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 20px;\n  width: calc(33.33% - 20px);\n  cursor: pointer;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  a {\n    text-decoration: none; /* Ensure text-decoration is set to none */\n    color: #333;\n    display: block;\n    text-align: center;\n  }\n\n  img {\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n    border-radius: 5px;\n    margin-bottom: 10px;\n    display: block;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .genre {\n    font-style: italic;\n    color: #777;\n  }\n\n  span {\n    display: block;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst Movies = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    // Fetch genres\n    axios\n      .get('https://api.themoviedb.org/3/genre/movie/list', {\n        params: {\n          api_key: '23f77f1a7852117720a48008d2ea32a0',\n        },\n      })\n      .then(response => {\n        setGenres(response.data.genres);\n      })\n      .catch(error => {\n        console.error('Error fetching genres:', error);\n      });\n  }, []);\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(\n        'https://api.themoviedb.org/3/search/movie',\n        {\n          params: {\n            api_key: '23f77f1a7852117720a48008d2ea32a0',\n            query: searchTerm,\n          },\n        }\n      );\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  const getGenreNames = genreIds => {\n    return genreIds\n      .map(genreId => {\n        const genre = genres.find(g => g.id === genreId);\n        return genre ? genre.name : '';\n      })\n      .filter(Boolean) // Remove any empty strings\n      .join(', ');\n  };\n\n  return (\n    <MoviesWrapper>\n      <CenteredWrapper>\n        <h1>Search Movies</h1>\n        <SearchWrapper>\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n          />\n          <button onClick={handleSearch}>Search</button>\n        </SearchWrapper>\n      </CenteredWrapper>\n      <MoviesList>\n        {searchResults.map(movie => (\n          <MovieItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                    : 'замінний-шлях'\n                }\n                alt={movie.title}\n              />\n              <span className=\"title\">{movie.title}</span>\n              <span className=\"genre\">{getGenreNames(movie.genre_ids)}</span>\n            </Link>\n          </MovieItem>\n        ))}\n      </MoviesList>\n    </MoviesWrapper>\n  );\n};\n\nexport default Movies;"],"names":["MoviesWrapper","styled","_templateObject","_taggedTemplateLiteral","CenteredWrapper","_templateObject2","SearchWrapper","_templateObject3","MoviesList","_templateObject4","MovieItem","_templateObject5","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","genres","setGenres","useEffect","axios","params","api_key","then","response","data","catch","error","console","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","query","sent","results","t0","stop","apply","arguments","_jsxs","children","_jsx","type","value","onChange","e","target","onClick","map","movie","Link","to","concat","id","src","poster_path","alt","title","className","genreIds","genre_ids","genreId","genre","find","g","name","filter","Boolean","join"],"sourceRoot":""}