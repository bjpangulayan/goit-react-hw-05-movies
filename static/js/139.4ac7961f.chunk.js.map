{"version":3,"file":"static/js/139.4ac7961f.chunk.js","mappings":"yNAKMA,EAAcC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0/BAiI9B,UAlEa,WACX,IAAAC,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,IAExBG,EAAAA,EAAAA,YAAU,WAERC,EAAAA,EAAAA,IACO,gDAAiD,CACpDC,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAAC,GACJN,EAAUM,EAASC,KAAKR,OAC1B,IACCS,OAAM,SAAAC,GACLC,QAAQD,MAAM,yBAA0BA,EAC1C,IAGFP,EAAAA,EAAAA,IACO,gDAAiD,CACpDC,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAAC,GACJ,IAAMK,EAA4BL,EAASC,KAAKK,QAAQC,KAAI,SAAAC,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC5DD,GAAK,IACRE,eAAe,mCAADC,OAAqCH,EAAMI,cAAa,IAExEtB,EAAiBe,EACnB,IACCH,OAAM,SAAAC,GACLC,QAAQD,MAAM,iCAAkCA,EAClD,GACJ,GAAG,IAYH,OACEU,EAAAA,EAAAA,MAAChC,EAAW,CAAAiC,SAAA,EACVC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGzB,EAAckB,KAAI,SAAAC,GAAK,OACtBO,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,GAAE,WAAAN,OAAaH,EAAMU,IAAKJ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKI,IAAKX,EAAME,eAAgBU,IAAKZ,EAAMa,SAC3CN,EAAAA,EAAAA,KAAA,QAAMO,UAAU,QAAOR,SAAEN,EAAMa,SAC/BN,EAAAA,EAAAA,KAAA,QAAMO,UAAU,QAAOR,UAnBbS,EAmB6Bf,EAAMgB,UAlBhDD,EACJhB,KAAI,SAAAkB,GACH,IAAMC,EAAQjC,EAAOkC,MAAK,SAAAC,GAAC,OAAIA,EAAEV,KAAOO,CAAO,IAC/C,OAAOC,EAAQA,EAAMG,KAAO,EAC9B,IACCC,OAAOC,SACPC,KAAK,aAQOxB,EAAMU,IAfD,IAAAK,CAqBT,QAKf,C","sources":["components/home/home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst HomeWrapper = styled.div`\n  padding: 20px;\n\n  h1 {\n    font-size: 23px;\n    margin-bottom: 10px;\n    color: #333;\n    text-align: center; /* Center the h1 element */\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n\n  li {\n    font-size: 18px;\n    margin-bottom: 20px;\n    width: calc(33.33% - 20px);\n    cursor: pointer;\n    transition: transform 0.3s ease;\n\n    &:hover {\n      transform: scale(1.07);\n    }\n\n    a {\n      text-decoration: none;\n      color: #333;\n      display: block;\n      text-align: center;\n    }\n\n    img {\n      width: 100%;\n      height: 200px;\n      object-fit: cover;\n      border-radius: 5px;\n      margin-bottom: 10px;\n      display: block;\n    }\n\n    span {\n      display: block;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .title {\n      font-weight: bold;\n    }\n\n    .genre {\n      font-style: italic;\n      color: #777;\n    }\n  }\n`;\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    // Fetch genres\n    axios\n      .get('https://api.themoviedb.org/3/genre/movie/list', {\n        params: {\n          api_key: '23f77f1a7852117720a48008d2ea32a0',\n        },\n      })\n      .then(response => {\n        setGenres(response.data.genres);\n      })\n      .catch(error => {\n        console.error('Error fetching genres:', error);\n      });\n\n    // Fetch popular movies\n    axios\n      .get('https://api.themoviedb.org/3/trending/all/day', {\n        params: {\n          api_key: '23f77f1a7852117720a48008d2ea32a0',\n        },\n      })\n      .then(response => {\n        const moviesWithFullPosterPaths = response.data.results.map(movie => ({\n          ...movie,\n          fullPosterPath: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n        }));\n        setPopularMovies(moviesWithFullPosterPaths);\n      })\n      .catch(error => {\n        console.error('Error fetching popular movies:', error);\n      });\n  }, []);\n\n  const getGenreNames = genreIds => {\n    return genreIds\n      .map(genreId => {\n        const genre = genres.find(g => g.id === genreId);\n        return genre ? genre.name : '';\n      })\n      .filter(Boolean) // Remove any empty strings\n      .join(', ');\n  };\n\n  return (\n    <HomeWrapper>\n      <h1>Popular Movies</h1>\n      <ul>\n        {popularMovies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              <img src={movie.fullPosterPath} alt={movie.title} />\n              <span className=\"title\">{movie.title}</span>\n              <span className=\"genre\">{getGenreNames(movie.genre_ids)}</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </HomeWrapper>\n  );\n};\n\nexport default Home;"],"names":["HomeWrapper","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","popularMovies","setPopularMovies","_useState3","_useState4","genres","setGenres","useEffect","axios","params","api_key","then","response","data","catch","error","console","moviesWithFullPosterPaths","results","map","movie","_objectSpread","fullPosterPath","concat","poster_path","_jsxs","children","_jsx","Link","to","id","src","alt","title","className","genreIds","genre_ids","genreId","genre","find","g","name","filter","Boolean","join"],"sourceRoot":""}